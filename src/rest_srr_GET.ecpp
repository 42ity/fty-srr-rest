<#
 #
 # Copyright (C) 2018 Eaton
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License along
 # with this program; if not, write to the Free Software Foundation, Inc.,
 # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 #
 #><#
/*!
 * \file rest_srr_GET.ecpp
 * \author Xavier Millieret <XavierMillieret@Eaton.com>
 * \brief Implementation of GET to retrieve features list.
 */
 #><%pre>

#include <src/fty_srr_rest_classes.h>

using namespace dto::srr;

/**
 * Get SRR capabilities.
 *
 */
static std::string getFeatureListManaged()
{
     // Default status
     Query query = createListFeatureQuery();

     dto::UserData reqData;
     reqData << query;

     // Send request
     dto::UserData respData = sendRequest("get", reqData);
     if (respData.empty())
     {
        throw std::runtime_error("Impossible to get the list of features.");
     }

     Response response;
     respData >> response;

     return responseToUiJson(response);
}

</%pre>
<%request scope="global">
UserInfo user;
//std::string gaccess_token;
</%request>
<%cpp>
    // check user permissions
    static const std::map <BiosProfile, std::string> PERMISSIONS = {
            {BiosProfile::Admin, "R"}
    };

    //CHECK_USER_PERMISSIONS_OR_DIE(PERMISSIONS);
    
    try
    {
        log_debug("we got something");
        reply.out() << getFeatureListManaged();
    }
    catch (std::runtime_error& ex)
    {
        http_die ("internal-error", TRANSLATE_ME ("SrrException on save IPM2").c_str());
    }
        
</%cpp>
